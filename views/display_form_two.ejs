<%- include('partials/header') %>
    <title>Data Display</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- DataTables CSS -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">

    <!-- Your custom CSS styles -->
    <style>
        body {
            background-color: #f8f9fa;
            /* Bootstrap background color */
            margin: 0;
            /* Remove default body margin */
        }

        .table-container {
            max-width: calc(100% - 100px);
            /* Adjust width based on screen width */
            margin: auto;
            /* Center the container */
            overflow-x: auto;
            /* Enable horizontal scrolling */
        }
    </style>

    <div class="table-container">
        <table id="data-table" class="table table-striped table-bordered">
            <thead>
                <% if (formDataArray.length> 0) { %>
                    <tr>
                        <% Object.keys(formDataArray[0]).forEach(field=> { %>
                            <th>
                                <%= field %>
                            </th>
                            <% }); %>
                                <th>Actions</th>
                    </tr>
                    <% } else { %>
                        <tr>
                            <th colspan="2">No data available</th>
                        </tr>
                        <% } %>
            </thead>

            <tbody>
                <% formDataArray.forEach(record=> { %>
                    <tr>
                        <% Object.values(record).forEach(value=> { %>
                            <td>
                                <%= value %>
                            </td>
                            <% }); %>
                                <td>
                                    <button onclick="editRecord('<%= record.id %>')" class="btn btn-warning btn-sm"
                                        data-bs-toggle="tooltip" data-bs-placement="top" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button onclick="deleteRecord('<%= record.id %>')" class="btn btn-danger btn-sm"
                                        data-bs-toggle="tooltip" data-bs-placement="top" title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                    <button onclick="exportRecord('<%= record.id %>')" class="btn btn-primary btn-sm"
                                        data-bs-toggle="tooltip" data-bs-placement="top" title="Export">
                                        <i class="bi bi-file-earmark-pdf"></i>
                                    </button>

                                </td>
                    </tr>
                    <% }); %>
            </tbody>
        </table>
    </div>

    <!-- jQuery and DataTables JS -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script type="text/javascript" charset="utf8"
        src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize DataTable
            $('#data-table').DataTable();

            // Enable Bootstrap tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        function editRecord(recordId) {
            // Implement your edit logic here
            console.log("Edit record with ID:", recordId);
        }

        async function deleteRecord(recordId) {
            // Implement your delete logic here
            try {
                // Use the recordId to delete the document from Firestore
                await fetch(`/delete-record/${recordId}`, { method: 'DELETE' });

                // Reload the page or update the UI as needed
                location.reload();
            } catch (error) {
                console.error("Error deleting record:", error);
            }
        }

        function exportRecord(recordId) {
            // Implement your export logic here
            console.log("Export record with ID:", recordId);

            // Make a fetch request to the server to export the PDF
            fetch(`/export-pdf/${recordId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Failed to export PDF: ${response.status} ${response.statusText}`);
                    }
                    return response.blob();
                })
                .then(blob => downloadBlob(blob, recordId))
                .catch(error => handleError(error, recordId));
        }

        function downloadBlob(blob, recordId) {
            // Create a link element and trigger a download
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = `record_${recordId}.pdf`;
            link.click();
        }

        function handleError(error, recordId) {
            console.error('Error exporting PDF:', error);
            // Handle the error as needed
        }

        $(document).ready(function () {
            // Initialize DataTable
            $('#data-table').DataTable();
        });
    </script>
<%- include('partials/footer') %>
